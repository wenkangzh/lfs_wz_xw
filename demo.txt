1. File manipulation. 
	~ File write:	
			echo hello >> test
			ls
	~ File write intensively:
			for i in {1..20} ; do echo hello >> test ; done
	~ File read:
			cat test
	~ Rename the file:
			mv test test1
			ls
	~ Delete file:
			rm test1
			ls

2. Directory manipulation
	~ Make directory:
			mkdir dir
			ls
	~ Remove directory:
			rmdir dir
	~ Write file in directory other than root
			mkdir dir
			cd dir
			echo hello >> test
			cat test
	~ Try to remove directory when directory is not empty:
			rmdir dir
	~ Then delete file first then remove directory:
			rm dir/test
			rmdir dir

3. Symbolic & Hard Links
	~ Prepare
			echo hello >> test
	~ Create a symbolic link
			ln -s test test1
	~ Create a hard link
			link test test2
	~ Remove the initial file
			rm test
	~ Check if the symbolic link work:
			cat test1
	~ Remove the symbolic link:
			rm test1
			ls
	~ Check if the hard link work:
			cat test2
	~ Remove the hard link:
			rm test2
			ls

4. chmod / chown
	~ Prepare:
		echo hello >> test
		ls -l
	~ Change the file permission
		chmod 771 test
		ls -l
	~ Change the owner id
		chown wenkangzhou:everyone test

5. Indirect block for files
	~ Copy a large enough (around 130KB) file from outside
		()

----- RESTART -----

6. Tail segment
	~ Prepare:(Remember address of created file)
		echo hello >> test
	~ Read (Check read output with address of created file)
		cat test
	~ 
		for i in {1..13} ; do cp test test$i ; done
	~	
		cat test


7. Segment cache (For reading segments)
	1. segment inserted to the cache
		for i in {1..12}; do echo hello >> test; done
		echo a >> a
	2. retrieve segment from the cache
		cat a
	3. Access Order
		Copy a large size file from outside, the system will need to access the destination directory file, must be a small seg number. 

8. Cleaner & Segment summary table & Segment usage table

9. Crash Recovery (Including normal persistant test)
	~ Write some files
		echo hello >> test
		for i in {1..13} ; do cp test test$i ; done
	~ Unmount the filesystem. 
		cd .. ; umount a

	~ Write some files
		echo hello >> test
		for i in {1..13} ; do cp test test$i ; done
		cp test a 		// assume a new check point region is created after this one
		mkdir d 		// this directory will not be here after recovery, since it is created after CP

	~ Make filesystem crash

	~ Load back filesystem and check files












